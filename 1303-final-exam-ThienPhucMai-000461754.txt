
CSTP 1303 - July 29, 2023 Final Exam
======================================

Instructions:
Exam is closed notes, books and web.
Put the questions and answers on a Text file.
Name the file as 1303-midterm-[YourFullName]-[StudentNumber].Txt

To Submit the exam:
===================
1 - Push the file to your GitHub repo and submit the link to Moodle.
2 - Attach a copy of the text file to email to george.bekari@gmail.com
====================================================================================

1 - What does DNS stand for and what is the problem it solves?
DNS stands for Domain Name System. It translates the domain name like (www.example.com) to IP address like (192.1.2.3). It is used for connecting to internet or IP network

2 - Explain how the DNS resolver uses root DNS, TLD and SLD using an example?
The DNS resolver will query the Root DNS server when user type in like www.something.com and then direct queries to TLD DNS servers
TLD DNS server query the .com domain. It will respond to the resolver with the IP address of the authoritative nameserver for "example.com"
The DNS resolver now qeuries the authoritative nameserver for the something.com domain. Finally the authoritative namesever responds to the  DNS resolver with the IP address
associated with www.something.com

3 - What is a thread in simple terms?
Thread is a basic unit of a computer program's execution. It is responsible for a task in a large program and run independently. 

4 - What is a process in simple terms?
Process is a program execution. It's like running an application or task on computer

5 - Explain what a Client is in a Client/Server architecture?
A computer program or device which makes request to a server for services, resources or data

6 - Explain what a Server is in a Client/Server architecture?
A central computer or software system that provides services, resources, or data to other computers or programs called client

7 - Response codes 400-499 are reserved for what kinds of responses?
    A) Server errors
    B) Failed Network
    C) Client errors 
    D) Successful completion

Answer: C) Client Errors

8 - We are creating an API for customer management with fetch, create, update and list functionality.
    What should the API do when a client POSTs to this endpoint [  http://www.codingsolutions/api/customer/  ]?
    A) Generate an error
    B) Create a new Customer
    C) Update a Customer
    D) Patch a Customer 
    
Answer: B)Create a new customer

9 - What should the API do when a client POSTs to the endpoint using an id parameter [  http://www.codingsolutions/api/customer/?id=123  ]?
    A) Generate an error
    B) Create a new Customer
    C) Update a Customer
    D) Patch a Customer 
    
Answer: A)Generate an error

10 - For what is DNS responsible?
    A) Dynamically assigning IP addresses
    B) Converting hostnames to IP addresses
    C) Converting IPV6 to IPV4
    D) Calculating latency on the network 
    
Answer: B) Converting hostnames to IP addresses
    
11 - For what is TCP responsible?
    A) Semi-reliable network transportation
    B) Reliable network transportation with no guarantee of packet delivery order
    C) Reliable network transportation with guarantee of packet delivery order
    D) Semi-reliable network transportation with guarantee of packet delivery order
   
Asnwer: C) Reliable network transportation with guarantee of packet delivery order
 
12 - Where would you most likely encounter UDP?
    A) Banking website
    B) Online games
    C) Healthcare exchange website
    D) Stock trading website 
    
Answer: B) Online Games

13 - In which portion of the OSI model will a user most likely notice an issue?
    A) Layer 1 - The Physical Layer
    B) Layer 6 - The Presentation Layer
    C) Layer 2 - The Data Layer
    D) Layer 7 - The Application Layer 
    
Answer: D) Layer 7 - The Application Layer  

14 - When using await to call an asynchronous function, where does the execution continue after returning from function?
    A) On the same thread that it executed the asynchronous operation in
    B) On the original context that spawned the asynchronous operation
    C) On a completely new thread 
    
Answer: B) On the original context that spawned the asynchronous operation

15 - Why should you always use async and await together in a method that leverages the asynchronous principles?
    A) Only a few situations require you to only use the await keyword.
    B) It makes the code perform faster.
    C) It makes the application easier to maintain.
    D) Only marking your method as async has no effect. 

Answer: C) It makes the application easier to maintain.

16 - Why don't you explicltly have to return a Task from a method marked as async?
    A) Because it will automatically return a Task when you mark it as async.
    B) This is false; you have to explictly return a Task from the method, even when marking it as async.
    C) When you introduce the await keyword in an async method, it automatically gives you a Task to return. 

Answer: C) When you introduce the await keyword in an async method, it automatically gives you a Task to return. 
       
17 - What is the difference between an abstract and concrete class?
    A) Abstract classes don't allow construction using the new keyword.
    B) Concrete classes don't allow construction using the new keyword.
    C) Abstract classes have no implementation.

Answer: C) Abstract classes have no implementation.


    
18 - Assuming that we have two async implementations of GetResult1 and GetResult2 called
    GetResult1Async() and GetResult2Async(), change the following code to take advantage of asynchronous execution. 
    
    public int AddResults()
    {
        var result1 = GetResult1();
        var result2 = GetResult2();
        
        return result1 + result2;
    }

Answer:  public async Task<int> AddResults()
    {
        Task<int> getResult1 = GetResult1();
        Task<int> getResult2 = GetResult2();
        
	int result1 = await getResult1;
	int result2 = await getResult2;
	
        return result1 + result2;
    }
    
19 - Which of the following collection objects would fulfill the following requirements?
    It must internally store a key and value pair for each item.
    It must allow us to iterate over the collection in order of the key.
    It allows us to access the objects using the key.
    
    A) Dictionary
    B) Stack
    C) List
    D) SortedList

Answer: A) Dictionary 
    
20 - Which of the following statements are true?
    A) We can increase the size of an array collection type during program execution.
    B) Queues follow the LIFO model for accessing elements.
    C) A dictionary saves data in KeyValuePair, ensuring the uniqueness of key-value pairs present in the collection item.
    D) A list allows random access to the data elements.
Answer: C)A dictionary saves data in KeyValuePair, ensuring the uniqueness of key-value pairs present in the collection item.
    
21 - You are working with a large group of student objects. You need to remove all duplicates and then group them by studentid. Which collections should we use?
    A) List
    B) Stack
    C) Dictionary
    D) Queue
    
    Answer: C) Dictionary
22 - Suppose you have the following code snippet:
     class Person
     {
        public int ID { get; set; }
        public string Name { get; set; }
        public int Age { get; set; }
     }

    class PersonRepository
    {
        Dictionary<int, Person> people = new Dictionary<int, Person>
        {
            {21, new Person {ID = 1, Name="Ali", Age = 22 } },
            {22, new Person {ID = 2, Name="Sundus", Age = 21 } },
            {23, new Person {ID = 3, Name="Asad", Age = 22 } },
            {24, new Person {ID = 5, Name="Naveed", Age = 21 } },
        };

        private void AddAdminMember()
        {
X1:        
X2:         people.Add(24, new Person { ID = 6, Name = "Malik", Age = 10 });

        }
    }

    The application fails at line X2 with the following error message: "An item with the same key has already been added." You need to resolve the error.
    Which code segment should you insert at line X1?
    
    A) foreach (Person person in people.Values.Where(t=>t.ID !=24))
    B) if(!people.ContainsKey(24))
    C) foreach (KeyValuePair<int, Person> key in people.Where(t=>t.Key != 24))
    D) foreach (int key in people.Keys.Where(k=>k!=24))

Answer: B) if(!people.ContainsKey(24)) 

23 - Write a Concurrent Generic Queue with the following public methods:
The queue should use an array as the internal data structure.
Vote that the queue may be called from multiple threads
Enqueue - puts an item on the queue
Dequeue - removes and returns the next in line item
GetCurrentLength - returns the current length
Peek - returns the next in line item
Queue should have a contructor that takes in the max. length.

Do not use the built-in .net queue.
Try to implement the queue with optimum efficiency.

using System;
using System.Threading;

public class ConcurrentQueue<T>
{
    private readonly T[] data;
    private readonly int maxLength;
    private int head;
    private int tail;
    private int count;

    private readonly object enqueueLock = new object();
    private readonly object dequeueLock = new object();

    public ConcurrentQueue(int maxLength)
    {
        if (maxLength <= 0)
        {
            throw new ArgumentException("MaxLength must be greater than zero.");
        }

        this.maxLength = maxLength;
        this.data = new T[maxLength];
        this.head = 0;
        this.tail = 0;
        this.count = 0;
    }

    public void Enqueue(T item)
    {
        lock (enqueueLock)
        {
            while (count >= maxLength)
            {
                Monitor.Wait(enqueueLock);
            }

            data[tail] = item;
            tail = (tail + 1) % maxLength;
            count++;

            Monitor.PulseAll(dequeueLock);
        }
    }

    public T Dequeue()
    {
        lock (dequeueLock)
        {
            while (count == 0)
            {
                Monitor.Wait(dequeueLock);
            }

            T item = data[head];
            head = (head + 1) % maxLength;
            count--;

            Monitor.PulseAll(enqueueLock);
            return item;
        }
    }

    public int GetCurrentLength()
    {
        lock (enqueueLock)
        {
            return count;
        }
    }

    public T Peek()
    {
        lock (dequeueLock)
        {
            if (count == 0)
            {
                throw new InvalidOperationException("Queue is empty.");
            }

            return data[head];
        }
    }
}


=========================================
This part of the exam gives you an option:
You get to choose between Q24 & Q25.
==========================================

24 - You are develping an RPG game that incorporatres warriors, weapons and damages each weapon can cause. 
    Your job is to create the classes for weapon damages. 
    The weapons that can cause damage and the amount of damages are:
      Weapon     Base Damage 
      ======     ===========
    - Sword       3
    - Arrow       2
    - Crossbow    2.5 
    - Whip        1.5
    - Dagger      2
    - Staff       1
    
    All weapons calculate damage first by rolling dice. This is a virtual dice roll done randomly by the code.
    A Dice roll of one  has no effect on the damage.
    There should be a CalculateDamage() method that returns the damage calculated as double.
    Sword, Staff and Dagger are special weapons in that they can become magical weapons if the player has reached levels 2 and above.
    Every player starts at level 1. From levels 2 and up, the magic adds extra percentage to the weapon's damage.
    
    Player Level Damage increase % 
    ============ ================
    1               none
    2               40%
    3               60%
    4               80%
    5               100%

    Dice Roll  Damage increase %
    ========= ====================
    1               none 
    2               20%
    3               30%
    4               40%
    5               50%
    6               60%

    E.g. the damage score for a sword is 3 and the user rolls 5 that increases the damage by 50% to 4.5
    And if the player is at level 3, the damage is increased by 60% to 7.2
        
    Create the classes and methods necessary to calculate represent weapon damage and implement the CalculateDamage method for all weapons.
	
using System;

public class Weapon
{
    public string Name { get; }
    public double BaseDamage { get; }
    public double DamageIncreaseFromLevel { get; }
    public double DamageIncreaseFromDiceRoll { get; }

    public Weapon(string name, double baseDamage, double damageIncreaseFromLevel, double damageIncreaseFromDiceRoll)
    {
        Name = name;
        BaseDamage = baseDamage;
        DamageIncreaseFromLevel = damageIncreaseFromLevel;
        DamageIncreaseFromDiceRoll = damageIncreaseFromDiceRoll;
    }

    public virtual double CalculateDamage(int playerLevel, int diceRoll)
    {
        double damage = BaseDamage;

        // Apply damage increase from player level
        if (playerLevel >= 2 && playerLevel <= 5)
        {
            double levelMultiplier = 0.4 * (playerLevel - 1);
            damage += BaseDamage * levelMultiplier;
        }
        else if (playerLevel > 5)
        {
            // If player level is above 5, apply maximum damage increase
            double maxLevelMultiplier = 0.4 * 4; // 4 because player level 5 already gets 100% increase
            damage += BaseDamage * maxLevelMultiplier;
        }

        // Apply damage increase from dice roll
        double diceMultiplier = 0;
        switch (diceRoll)
        {
            case 2: diceMultiplier = 0.2; break;
            case 3: diceMultiplier = 0.3; break;
            case 4: diceMultiplier = 0.4; break;
            case 5: diceMultiplier = 0.5; break;
            case 6: diceMultiplier = 0.6; break;
            default: break;
        }
        damage += BaseDamage * diceMultiplier;

        return damage;
    }
}

public class Sword : Weapon
{
    public Sword() : base("Sword", 3, 0.4, 0) { }
}

public class Arrow : Weapon
{
    public Arrow() : base("Arrow", 2, 0, 0) { }
}

public class Crossbow : Weapon
{
    public Crossbow() : base("Crossbow", 2.5, 0, 0) { }
}

public class Whip : Weapon
{
    public Whip() : base("Whip", 1.5, 0, 0) { }
}

public class Dagger : Weapon
{
    public Dagger() : base("Dagger", 2, 0.4, 0) { }
}

public class Staff : Weapon
{
    public Staff() : base("Staff", 1, 0.4, 0) { }
}

25 - We have a Player Score object for our game in previous question that has the following properties.
    - Username (string)
    - GameId (string)
    - Score (DateTime)
    - Score (double)
    
    We need to periodically save the GameScore to a flat text file.
    We also need to read the score from the latest file into memory when the user logs into the game.
    Write the classes and methods to accomplish these functionalities.

    // Assume you have the following utility interface, class and enum to access the file system.
    public interface IFileManager
    {
        List<File> GetFolderContect(string path);
        Open(string filename);
        string ReadAll();
        string Read(int length);
        int Write(string);
        Close();
    }

    public class File
    {
        public FileSystemObjectType FileSystemObjectType { get; }
        public string Filename { get; }
        public string Path { get; }
    }
    
    public enum FileSystemObjectType
    {
        File,
        Folder
    }

    ===========================================
    Terms & abbreviations:
    OSI: The Open Systems Interconnection model